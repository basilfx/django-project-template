from django.core.exceptions import ImproperlyConfigured
from my_project.settings import *

# Default settings, overrides settings in generic
DEBUG = True
TEMPLATE_DEBUG = True
ENABLE_DEBUG_TOOLBAR = True
ENABLE_SENTRY = False

# Database settings
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '',
        'USER': '',
        'PASSWORD': '',
        'HOST': ''
    }
}

# Load Django Debug Toolbar
if ENABLE_DEBUG_TOOLBAR:
    if not DEBUG:
        raise ImproperlyConfigured("Django Debug Toolbar enabled while DEBUG is False")

    # Callable to always enable the toolbar, except for AJAX requests. This will
    # override the check for remote IP in INTERAL_IPS!
    def show_debug_toolbar(request):
        return not request.is_ajax()

    # Order is important
    INSTALLED_APPS = INSTALLED_APPS + ('debug_toolbar.apps.DebugToolbarConfig', )

    DEBUG_TOOLBAR_CONFIG = {
        'SHOW_TOOLBAR_CALLBACK': 'my_project.settings.local.show_debug_toolbar',
        'INTERCEPT_REDIRECTS' : False,
    }

# Enable Sentry logging
if ENABLE_SENTRY:
    # Set your DSN value
    RAVEN_CONFIG = {
        'dsn': '',
    }

    # Add raven to the list of installed apps, unless DEBUG is True
    if not DEBUG:
        INSTALLED_APPS = INSTALLED_APPS + (
            'raven.contrib.django.raven_compat',
        )